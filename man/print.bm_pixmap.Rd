% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print.bm_pixmap.R
\name{print.bm_pixmap}
\alias{print.bm_pixmap}
\alias{format.bm_pixmap}
\title{Print pixmap objects}
\usage{
\method{print}{bm_pixmap}(
  x,
  ...,
  bg = getOption("bittermelon.bg", FALSE),
  compress = getOption("bittermelon.compress", "none")
)

\method{format}{bm_pixmap}(
  x,
  ...,
  bg = getOption("bittermelon.bg", FALSE),
  compress = getOption("bittermelon.compress", "none")
)
}
\arguments{
\item{x}{A \code{\link[=bm_pixmap]{bm_pixmap()}} object}

\item{...}{Currently ignored.}

\item{bg}{R color string of background color to use and/or
cli ANSI style function of class \code{cli_ansi_style}.
\code{FALSE} (default) for no background color
(i.e. use default terminal background).}

\item{compress}{How to print the image:
* "none" (default) or "n" use one character per pixel.
* "vertical" or "v" use one character per two vertical pixels
(makes pixels look closest to square in typical terminal).
* "horizontal" or "h" use one character per two horizontal pixels.
* "both" or "b" use one character per four pixels
(this will be a lossy conversion whenever there are more than two colors per four pixels).}
}
\description{
\code{print.bm_pixmap()} prints bittermelon pixmap objects to the terminal
It is a wrapper around \code{format.bm_pixmap()}.
}
\examples{
crops <- farming_crops_16x16()
corn <- crops$corn$portrait
if (cli::is_utf8_output() && cli::num_ansi_colors() >= 256L) {
  print(corn)
}

if (cli::is_utf8_output() && cli::num_ansi_colors() >= 256L) {
  print(corn, compress = "v", bg = cli::bg_br_white)
}

if (cli::is_utf8_output() && 
    cli::num_ansi_colors() > 256L &&
    getOption("width") >= 100L) {
  img <- png::readPNG(system.file("img", "Rlogo.png", package="png"))
  pm <- as_bm_pixmap(img)
  print(pm, compress = "v")
}
}
