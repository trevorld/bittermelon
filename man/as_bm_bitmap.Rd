% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_bm_bitmap.R
\name{as_bm_bitmap}
\alias{as_bm_bitmap}
\alias{as_bm_bitmap.matrix}
\alias{as_bm_bitmap.default}
\alias{as_bm_bitmap.grob}
\title{Coerce to bitmap glyph objects}
\usage{
as_bm_bitmap(x, ...)

\method{as_bm_bitmap}{matrix}(x, ...)

\method{as_bm_bitmap}{default}(x, ...)

\method{as_bm_bitmap}{grob}(
  x,
  ...,
  width = 8L,
  height = 16L,
  png_device = NULL,
  threshold = 0.25
)
}
\arguments{
\item{x}{An object that can reasonably be coerced to a \code{bm_bitmap()} object.}

\item{...}{Further arguments passed to or from other methods.}

\item{width}{Desired width of bitmap}

\item{height}{Desired height of bitmap}

\item{png_device}{A function taking arguments \code{filename}, \code{width}, and \code{height}
that starts a graphics device that saves a png image
with a transparent background.  By default will use \code{\link[ragg:agg_png]{ragg::agg_png()}}
if available else the \dQuote{cairo} version of \code{\link[grDevices:png]{grDevices::png()}}
if available else just \code{\link[grDevices:png]{grDevices::png()}}.}

\item{threshold}{If any png channel weakly exceeds this threshold
(on an interval from zero to one)
then the pixel is determined to be \dQuote{black}.}
}
\value{
A \code{bm_bitmap()} object.
}
\description{
\code{as_bm_bitmap()} turns an existing object into a \code{bm_bitmap()} object.
}
\examples{
 space_matrix <- matrix(0L, nrow = 16L, ncol = 16L)
 space_glyph <- as_bm_bitmap(space_matrix)
 is_bm_bitmap(space_glyph)

 if (require("grid") && capabilities("png")) {
   circle <- as_bm_bitmap(circleGrob(r = 0.25), width = 16L, height = 16L)
   print(circle, px = c(".", "@"))

   inverted_exclamation <- as_bm_bitmap(textGrob("!", rot = 180),
                                        width = 8L, height = 16L)
   print(inverted_exclamation, px = c(".", "@"))
 }
}
\seealso{
\code{\link[=bm_bitmap]{bm_bitmap()}}
}
