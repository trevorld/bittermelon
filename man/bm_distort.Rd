% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bm_distort.R
\name{bm_distort}
\alias{bm_distort}
\alias{bm_distort.bm_bitmap}
\alias{bm_distort.bm_list}
\alias{bm_distort.bm_pixmap}
\alias{bm_distort.magick-image}
\alias{bm_distort.nativeRaster}
\alias{bm_distort.raster}
\title{Resize images via distortion.}
\usage{
bm_distort(x, width = NULL, height = NULL, ...)

\method{bm_distort}{bm_bitmap}(
  x,
  width = NULL,
  height = NULL,
  ...,
  filter = "Point",
  threshold = 0.5
)

\method{bm_distort}{bm_list}(x, width = NULL, height = NULL, ...)

\method{bm_distort}{bm_pixmap}(x, width = NULL, height = NULL, ..., filter = "Point")

\method{bm_distort}{`magick-image`}(x, width = NULL, height = NULL, ..., filter = "Point")

\method{bm_distort}{nativeRaster}(x, width = NULL, height = NULL, ..., filter = "Point")

\method{bm_distort}{raster}(x, width = NULL, height = NULL, ..., filter = "Point")
}
\arguments{
\item{x}{A \code{bm_bitmap()} object}

\item{width}{Desired width of bitmap}

\item{height}{Desired height of bitmap}

\item{...}{Passed to \code{\link[grid:grid.raster]{grid::grid.raster()}}.}

\item{filter}{Passed to \code{\link[magick:transform]{magick::image_resize()}}.
Use \code{\link[magick:options]{magick::filter_types()}} for list of supported filters.
The default "Point" filter will maintain your sprite's color palette.
\code{NULL} will give you the \code{magick}'s default filter which may work better
if you are not trying to maintain a sprite color palette.}

\item{threshold}{If the alpha channel weakly exceeds this threshold
(on an interval from zero to one)
then the pixel is determined to be \dQuote{black}.}
}
\value{
Either a \code{\link[=bm_bitmap]{bm_bitmap()}}, \code{\link[=bm_list]{bm_list()}}, or \code{\link[=bm_font]{bm_font()}} object.
}
\description{
\code{bm_distort()} resize images to arbitrary width and height value via \code{\link[magick:transform]{magick::image_resize()}}.
}
\examples{
font_file <- system.file("fonts/spleen/spleen-8x16.hex.gz", package = "bittermelon")
font <- read_hex(font_file)
capital_r <- font[[str2ucp("R")]]
dim(capital_r) # 8 x 16
if (requireNamespace("magick", quietly = TRUE)) {
  print(bm_distort(capital_r, width = 9L, height = 21L))
}
}
\seealso{
\code{\link[=bm_expand]{bm_expand()}} for expanding width/height by integer multiples.
\code{\link[=bm_resize]{bm_resize()}} for resizing an image via trimming/extending an image.
}
